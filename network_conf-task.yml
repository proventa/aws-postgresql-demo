# Tasks for configuring VPC, Subnet, Internet Gateway, Route Table and Security Group

- name: Ensure that VPC exists
  amazon.aws.ec2_vpc_net:
    name: postgres_demo_vpc
    cidr_block: 10.0.0.0/16
    region: eu-central-1
    tags:
      env: demo
    state: present
  register: vpc_net

- name: Ensure that an internet gateway for the VPC exists
  amazon.aws.ec2_vpc_igw:
    vpc_id: "{{ vpc_net.vpc.id }}"
    state: present
    region: eu-central-1
    tags:
      env: demo
  register: igw

- name: Ensure that the subnet for etcd in the VPC exists
  amazon.aws.ec2_vpc_subnet:
    state: present
    vpc_id: "{{ vpc_net.vpc.id }}"
    cidr: 10.0.0.0/16
    map_public: true
    tags:
      Name: etcd-subnet
  register: etcd_subnet

- name: Ensure that the route table for the VPC exists # So that the subnet can access and be accessed from the internet
  amazon.aws.ec2_vpc_route_table:
    vpc_id: "{{ vpc_net.vpc.id }}"
    region: eu-central-1
    tags:
      env: demo
    subnets:
      - "{{ etcd_subnet.subnet.id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw.gateway_id }}"
      - dest: ::/0
        gateway_id: "{{ igw.gateway_id }}"
  register: public_route_table

- name: Ensure that the security group exists
  amazon.aws.ec2_security_group:
    name: "Postgres Demo SG"
    description: "Security group for Postgres Demo"
    vpc_id: "{{ vpc_net.vpc.id }}"
    region: eu-central-1
    rules:
      - proto: tcp # SSH
        ports:
          - 22
        cidr_ip: "0.0.0.0/0"
      - proto: all # Internal Comms between EC2 instances
        from_port: 0
        to_port: 65535
        cidr_ip: "10.0.0.0/16"
    state: present
    tags:
      env: demo
  register: sg